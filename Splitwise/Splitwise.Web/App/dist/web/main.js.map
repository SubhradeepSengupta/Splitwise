{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.ts","webpack:///./app/app.html","webpack:///./app/app.module.ts","webpack:///./app/expenses/expense-create/expense-create.component.css","webpack:///./app/expenses/expense-create/expense-create.component.html","webpack:///./app/expenses/expense-create/expense-create.component.ts","webpack:///./app/expenses/expense-details/expense-details.component.css","webpack:///./app/expenses/expense-details/expense-details.component.html","webpack:///./app/expenses/expense-details/expense-details.component.ts","webpack:///./app/expenses/expense-edit/expense-edit.component.css","webpack:///./app/expenses/expense-edit/expense-edit.component.html","webpack:///./app/expenses/expense-edit/expense-edit.component.ts","webpack:///./app/expenses/expense-list/expense-list.component.css","webpack:///./app/expenses/expense-list/expense-list.component.html","webpack:///./app/expenses/expense-list/expense-list.component.ts","webpack:///./app/expenses/expenses.module.ts","webpack:///./app/expenses/nongroup-expense-list/nongroup-expense-list.component.css","webpack:///./app/expenses/nongroup-expense-list/nongroup-expense-list.component.html","webpack:///./app/expenses/nongroup-expense-list/nongroup-expense-list.component.ts","webpack:///./app/expenses/nongroup-expense/nongroup-expense.component.css","webpack:///./app/expenses/nongroup-expense/nongroup-expense.component.html","webpack:///./app/expenses/nongroup-expense/nongroup-expense.component.ts","webpack:///./app/expenses/settlement/settlement.component.css","webpack:///./app/expenses/settlement/settlement.component.html","webpack:///./app/expenses/settlement/settlement.component.ts","webpack:///./app/expenses/shared/expense.model.ts","webpack:///./app/expenses/shared/expenses.service.ts","webpack:///./app/friends/friend-create/friend-create.component.css","webpack:///./app/friends/friend-create/friend-create.component.html","webpack:///./app/friends/friend-create/friend-create.component.ts","webpack:///./app/friends/friend-edit/friend-edit.component.css","webpack:///./app/friends/friend-edit/friend-edit.component.html","webpack:///./app/friends/friend-edit/friend-edit.component.ts","webpack:///./app/friends/friend-list/friend-list.component.css","webpack:///./app/friends/friend-list/friend-list.component.html","webpack:///./app/friends/friend-list/friend-list.component.ts","webpack:///./app/friends/friends.module.ts","webpack:///./app/groups/add-member/add-member.component.css","webpack:///./app/groups/add-member/add-member.component.html","webpack:///./app/groups/add-member/add-member.component.ts","webpack:///./app/groups/group-create/group-create.component.css","webpack:///./app/groups/group-create/group-create.component.html","webpack:///./app/groups/group-create/group-create.component.ts","webpack:///./app/groups/group-details/group-details.component.css","webpack:///./app/groups/group-details/group-details.component.html","webpack:///./app/groups/group-details/group-details.component.ts","webpack:///./app/groups/group-edit/group-edit.component.css","webpack:///./app/groups/group-edit/group-edit.component.html","webpack:///./app/groups/group-edit/group-edit.component.ts","webpack:///./app/groups/group-list/group-list.component.css","webpack:///./app/groups/group-list/group-list.component.html","webpack:///./app/groups/group-list/group-list.component.ts","webpack:///./app/groups/groups.module.ts","webpack:///./app/groups/shared/group.model.ts","webpack:///./app/groups/shared/group.service.ts","webpack:///./app/main.ts","webpack:///./app/users/activity-list/activity-list.component.css","webpack:///./app/users/activity-list/activity-list.component.html","webpack:///./app/users/activity-list/activity-list.component.ts","webpack:///./app/users/current-user-edit/current-user-edit.component.css","webpack:///./app/users/current-user-edit/current-user-edit.component.html","webpack:///./app/users/current-user-edit/current-user-edit.component.ts","webpack:///./app/users/current-user/current-user.component.css","webpack:///./app/users/current-user/current-user.component.html","webpack:///./app/users/current-user/current-user.component.ts","webpack:///./app/users/dashboard/dashboard.component.css","webpack:///./app/users/dashboard/dashboard.component.html","webpack:///./app/users/dashboard/dashboard.component.ts","webpack:///./app/users/shared/user.model.ts","webpack:///./app/users/shared/user.service.ts","webpack:///./app/users/users.module.ts","webpack:///./environments/environment.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    moduleId: module.id,\n    templateUrl: 'app.html'\n})\n\nexport class AppComponent implements OnInit {\n\n    constructor()\n    {\n    }\n\n    ngOnInit() {\n    }\n}\n","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top: 3%;\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\"","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\r\nimport { ExpensesModule } from './expenses/expenses.module';\r\nimport { FriendsModule } from './friends/friends.module';\r\nimport { GroupsModule } from './groups/groups.module';\r\nimport { UsersModule } from './users/users.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { GroupListComponent } from './groups/group-list/group-list.component';\r\nimport { GroupDetailsComponent } from './groups/group-details/group-details.component';\r\nimport { GroupCreateComponent } from './groups/group-create/group-create.component';\r\nimport { ExpenseCreateComponent } from './expenses/expense-create/expense-create.component';\r\nimport { GroupEditComponent } from './groups/group-edit/group-edit.component';\r\nimport { AddMemberComponent } from './groups/add-member/add-member.component';\r\nimport { ExpenseListComponent } from './expenses/expense-list/expense-list.component';\r\nimport { ExpenseEditComponent } from './expenses/expense-edit/expense-edit.component';\r\nimport { CurrentUserComponent } from './users/current-user/current-user.component';\r\nimport { CurrentUserEditComponent } from './users/current-user-edit/current-user-edit.component';\r\nimport { SettlementComponent } from './expenses/settlement/settlement.component';\r\nimport { DashboardComponent } from './users/dashboard/dashboard.component';\r\nimport { FriendCreateComponent } from './friends/friend-create/friend-create.component';\r\nimport { FriendEditComponent } from './friends/friend-edit/friend-edit.component';\r\nimport { FriendListComponent } from './friends/friend-list/friend-list.component';\r\nimport { NongroupExpenseComponent } from './expenses/nongroup-expense/nongroup-expense.component';\r\nimport { NongroupExpenseListComponent } from './expenses/nongroup-expense-list/nongroup-expense-list.component';\r\nimport { ActivityListComponent } from './users/activity-list/activity-list.component';\r\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        ExpensesModule,\n        FriendsModule,\n        GroupsModule,\n        UsersModule,\n        RouterModule\n            .forRoot([\n                {\n                    path: 'groups',\r\n                    component: GroupListComponent\r\n                },\n                {\n                    path: 'groups/:id',\r\n                    component: GroupDetailsComponent\r\n                },\n                {\n                    path: 'create-group',\r\n                    component: GroupCreateComponent\r\n                },\n                {\n                    path: 'groups/:id/edit-group',\n                    component: GroupEditComponent\n                },\n                {\n                    path: 'groups/:id/add-member',\n                    component: AddMemberComponent\n                },\n                {\n                    path: 'groups/:groupId/expenses',\n                    component: ExpenseListComponent\n                },\n                {\n                    path: 'groups/:groupId/expenses/:expenseId/edit-expense',\n                    component: ExpenseEditComponent\n                },\n                {\n                    path: 'groups/:groupId/create-expense',\n                    component: ExpenseCreateComponent\n                },\n                {\n                    path: 'groups/:groupId/settlement',\n                    component: SettlementComponent\n                },\n                {\n                    path: 'current-user',\n                    component: CurrentUserComponent\n                },\n                {\n                    path: 'current-user/edit',\n                    component: CurrentUserEditComponent\n                },\n                {\n                    path: 'dashboard',\n                    component: DashboardComponent\n                },\n                {\n                    path: 'user/:id/add-friend',\n                    component: FriendCreateComponent\n                },\n                {\n                    path: 'user/:userId/friends/:friendId',\n                    component: FriendEditComponent\n                },\n                {\n                    path: 'user/:userId/friends',\n                    component: FriendListComponent\n                },\n                {\n                    path: 'nongroup-expense',\n                    component: NongroupExpenseListComponent\n                },\n                {\n                    path: 'nongroup-expense/create',\n                    component: NongroupExpenseComponent\n                },\n                {\n                    path: 'settlement',\n                    component: SettlementComponent\n                },\n                {\n                    path: 'current-user/activities',\n                    component: ActivityListComponent\n                },\n                {\n                    path: '',\r\n                    redirectTo: 'groups',\r\n                    pathMatch: 'full'\r\n                }])\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"label {\\r\\n    font-weight: bold;\\r\\n    margin-bottom: 3%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC9hcHAvZXhwZW5zZXMvZXhwZW5zZS1jcmVhdGUvZXhwZW5zZS1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixpQkFBaUI7QUFDckIiLCJmaWxlIjoiQXBwL2FwcC9leHBlbnNlcy9leHBlbnNlLWNyZWF0ZS9leHBlbnNlLWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzJTtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"width:60%; text-align: center;\\\" *ngIf=\\\"isAvailable\\\">\\r\\n    <h3>Add Expense</h3>\\r\\n    <h2> {{ groupDetails.GroupName }} ({{ groupDetails.DateCreated | date: 'medium' }})</h2>\\r\\n\\r\\n    <form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"container\\\" style=\\\"margin-top: 7%;\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label style=\\\"font-size: large;\\\">Expense On</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Name\\\" [(ngModel)]=\\\"expenseData.Name\\\" placeholder=\\\"Expense name\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"container\\\" style=\\\"padding:25px; margin-top: 5%; border-radius: 5px; box-shadow: 5px 5px 8px #777\\\">\\r\\n                <div class=\\\"form-group col-xs-6\\\">\\r\\n                    <label>Amount</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Amount\\\" [(ngModel)]=\\\"expenseData.Amount\\\" placeholder=\\\"Enter amount\\\" required />\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-6\\\" style=\\\"margin: 0px 0px 5% 0px;\\\">\\r\\n                    <label>Date</label>\\r\\n                    <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" name=\\\"Date\\\" [(ngModel)]=\\\"expenseData.Date\\\" required />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Paid By</label>\\r\\n                    <select class=\\\"form-control\\\" style=\\\"margin-bottom: 10%;\\\" name=\\\"Payee\\\" [(ngModel)]=\\\"expenseData.Payee\\\" required>\\r\\n                        <option selected disabled value=\\\"\\\">--Select--</option>\\r\\n                        <option *ngFor=\\\"let users of groupDetails.GroupUsers\\\" [value]=\\\"users.Id\\\"> {{ users.FullName }} </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-6\\\">\\r\\n                    <label style=\\\"font-size: medium;\\\">Include</label>\\r\\n                    <div class=\\\"form-check\\\" style=\\\"margin-bottom: 3%;\\\" *ngFor=\\\"let users of groupDetails.GroupUsers\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (click)=\\\"UserInclude(users.Id, users.FullName)\\\" required>\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            &nbsp; {{ users.FullName }}\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-6\\\">\\r\\n                    <label style=\\\"font-size: medium;\\\">Split As</label><br />\\r\\n                    <input type=\\\"radio\\\" name=\\\"splittype\\\" [(ngModel)]=\\\"expenseData.SplitType\\\" (change)=\\\"OnSplitSelect()\\\" value=\\\"Equal\\\"> Equal<br />\\r\\n                    <input type=\\\"radio\\\" name=\\\"splittype\\\" [(ngModel)]=\\\"expenseData.SplitType\\\" (change)=\\\"OnSplitSelect()\\\" value=\\\"Exact\\\"> Exact Amount<br />\\r\\n                    <input type=\\\"radio\\\" name=\\\"splittype\\\" [(ngModel)]=\\\"expenseData.SplitType\\\" (change)=\\\"OnSplitSelect()\\\" value=\\\"Percentage\\\"> Percentage\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"container\\\" style=\\\"margin: 5% 0px 5% 0px;\\\">\\r\\n                <div *ngIf=\\\"expenseData.SplitType === 'Equal'\\\">\\r\\n                    <h3>Equally</h3>\\r\\n                    <table class=\\\"table table-striped table-bordered\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <td>User</td>\\r\\n                                <td>Amount</td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of expenseData.IncludedUsers\\\" >\\r\\n                                <td>{{user.UserName}}</td>\\r\\n                                <td><input type=\\\"text\\\" class=\\\"form-control\\\" #EqualAmount placeholder=\\\"Amount\\\" readonly\\r\\n                                           name=\\\"UserAmount\\\" [(ngModel)]=\\\"user.UserAmount\\\" /></td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"expenseData.SplitType === 'Exact'\\\">\\r\\n                    <h3>Exact Amount</h3>\\r\\n                    <table class=\\\"table table-striped table-bordered\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <td>User</td>\\r\\n                                <td>Amount</td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of expenseData.IncludedUsers\\\">\\r\\n                                <td>{{user.UserName}}</td>\\r\\n                                <td><input type=\\\"text\\\" class=\\\"form-control\\\" #ExactAmount placeholder=\\\"Enter amount\\\"\\r\\n                                           name=\\\"UserAmount\\\" [(ngModel)]=\\\"user.UserAmount\\\" /></td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"expenseData.SplitType === 'Percentage'\\\">\\r\\n                    <h3>Percentage</h3>\\r\\n                    <table class=\\\"table table-striped table-bordered\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <td>User</td>\\r\\n                                <td>Percentage</td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of expenseData.IncludedUsers\\\">\\r\\n                                <td>{{user.UserName}}</td>\\r\\n                                <td><input type=\\\"text\\\" class=\\\"form-control\\\" #Percentage placeholder=\\\"Enter percentage\\\"\\r\\n                                           name=\\\"Percentage\\\" [(ngModel)]=\\\"user.Percentage\\\" /></td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <textarea class=\\\"form-control rounded-0\\\" rows=\\\"3\\\" cols=\\\"15\\\" name=\\\"Note\\\" [(ngModel)]=\\\"expenseData.Note\\\" placeholder=\\\"Notes\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"OnSubmit()\\\" style=\\\"margin-top: 3%;\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GroupService } from '../../groups/shared/group.service';\r\nimport { IncludedUser, ExpenseModel } from '../shared/expense.model';\r\nimport { ExpenseService } from '../shared/expenses.service';\r\nimport { GroupDetails } from '../../groups/shared/group.model';\r\n\n@Component({\n    selector: 'app-expense-create',\n    templateUrl: './expense-create.component.html',\n    styleUrls: ['./expense-create.component.css']\n})\nexport class ExpenseCreateComponent implements OnInit {\n\n    groupId: number;\n    groupDetails: GroupDetails;\n    expenseData: ExpenseModel;\n    isAvailable: boolean;\n\n    constructor(private _groupService: GroupService, private _expenseService: ExpenseService, private _route: ActivatedRoute, private _router: Router) {\n        this.groupId = + this._route.snapshot.paramMap.get('groupId');\n        this.groupDetails = new GroupDetails();\n        this.expenseData = new ExpenseModel();\n        this.isAvailable = false;\n    }\n\n    ngOnInit() {\n        this._groupService.GetGroupById(this.groupId).subscribe(\n            res => {\n                this.groupDetails = res as GroupDetails;\n                this.isAvailable = true;\n            },\n            err => {\n                debugger\n            });\n    }\n\n    UserInclude(userId: string, userName: string) {\r\n        let users = new IncludedUser(userId, userName, null, null);\r\n        if (this.expenseData.IncludedUsers.some(n => n.UserID === userId)) {\r\n            this.expenseData.IncludedUsers.splice(this.expenseData.IncludedUsers.findIndex(u => u.UserID === userId), 1);\r\n        }\r\n        else {\r\n            this.expenseData.IncludedUsers.push(users);\r\n        }\r\n        this.OnSplitSelect();\r\n    }\n\n    OnSplitSelect() {\n        if (this.expenseData.SplitType === 'Equal') {\n            for (let i = 0; i < this.expenseData.IncludedUsers.length; i++) {\r\n                this.expenseData.IncludedUsers[i].UserAmount = (this.expenseData.Amount / this.expenseData.IncludedUsers.length);\r\n            }\r\n        }\n        else {\r\n            for (let i = 0; i < this.expenseData.IncludedUsers.length; i++) {\r\n                this.expenseData.IncludedUsers[i].UserAmount = null;\r\n            }\r\n        }\r\n    }\n   \n    OnSubmit() {\r\n        this._expenseService.PostExpense(this.groupId, this.expenseData).subscribe(\r\n            res => {\r\n                this._router.navigate(['/groups/' + this.groupId]);\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2V4cGVuc2VzL2V4cGVuc2UtZGV0YWlscy9leHBlbnNlLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  expense-details works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expense-details',\n  templateUrl: './expense-details.component.html',\n  styleUrls: ['./expense-details.component.css']\n})\nexport class ExpenseDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2V4cGVuc2VzL2V4cGVuc2UtZWRpdC9leHBlbnNlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"width: 60%; text-align: center;\\\" *ngIf=\\\"groupAvailable\\\">\\r\\n    <h3>Edit Expense</h3>\\r\\n    <h3> {{ groupDetails.GroupName }} ({{ groupDetails.DateCreated | date: 'medium' }})</h3>\\r\\n\\r\\n    <form>\\r\\n        <div class=\\\"container\\\" style=\\\"margin-top: 7%;\\\" *ngIf=\\\"expenseAvailable\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label style=\\\"font-size: large;\\\">Expense On</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                       name=\\\"ExpenseName\\\" [(ngModel)]=\\\"expenseDetails.ExpenseName\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"container\\\" style=\\\"padding:25px; margin-top: 5%; border-radius: 5px; box-shadow: 5px 5px 8px #777\\\">\\r\\n                <div class=\\\"form-group col-xs-6\\\">\\r\\n                    <label>Amount</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"TotalAmount\\\" placeholder=\\\"Enter amount\\\"\\r\\n                           [(ngModel)]=\\\"expenseDetails.TotalAmount\\\" (change)=\\\"OnSplitChange()\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-6\\\" style=\\\"margin: 0px 0px 5% 0px;\\\">\\r\\n                    <label>Date</label>\\r\\n                    <input type=\\\"datetime-local\\\" class=\\\"form-control\\\"\\r\\n                           name=\\\"Date\\\" [(ngModel)]=\\\"expenseDetails.Date\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Paid By</label>\\r\\n                    <select class=\\\"form-control\\\" style=\\\"margin-bottom: 10%;\\\"\\r\\n                            name=\\\"Payee\\\" [(ngModel)]=\\\"expenseDetails.PayeeID\\\" required>\\r\\n                        <option *ngFor=\\\"let users of groupDetails.GroupUsers\\\" [value]=\\\"users.Id\\\" [selected]=\\\"users.Id === expenseDetails.PayeeID\\\"> {{ users.FullName }} </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-6\\\">\\r\\n                    <label style=\\\"font-size: medium;\\\">Include</label>\\r\\n                    <div class=\\\"form-check\\\" style=\\\"margin-bottom: 3%;\\\" *ngFor=\\\"let users of groupDetails.GroupUsers\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [checked]=\\\"IsChecked(users.Id)\\\" (change)=\\\"UserHandle(users.Id, users.FullName)\\\" />\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            &nbsp; {{ users.FullName }}\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-6\\\">\\r\\n                    <label style=\\\"font-size: medium;\\\">Split As</label><br />\\r\\n                    <input type=\\\"radio\\\" name=\\\"splittype\\\" [(ngModel)]=\\\"expenseDetails.SplitType\\\" (change)=\\\"OnSplitChange()\\\" value=\\\"Equal\\\"> Equal<br />\\r\\n                    <input type=\\\"radio\\\" name=\\\"splittype\\\" [(ngModel)]=\\\"expenseDetails.SplitType\\\" (change)=\\\"OnSplitChange()\\\" value=\\\"Exact\\\"> Exact Amount<br />\\r\\n                    <input type=\\\"radio\\\" name=\\\"splittype\\\" [(ngModel)]=\\\"expenseDetails.SplitType\\\" (change)=\\\"OnSplitChange()\\\" value=\\\"Percentage\\\"> Percentage\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"container\\\" style=\\\"margin: 5% 0px 5% 0px;\\\">\\r\\n                <div *ngIf=\\\"expenseDetails.SplitType === 'Equal'\\\">\\r\\n                    <h3>Equally</h3>\\r\\n                    <table class=\\\"table table-striped table-bordered\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <td>User</td>\\r\\n                                <td>Amount</td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of expenseDetails.Payer; let i = index;\\\">\\r\\n                                <td>{{user.UserName}}</td>\\r\\n                                <td>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" #EqualAmount placeholder=\\\"Amount\\\"\\r\\n                                           name=\\\"UserAmount{{i}}\\\" [(ngModel)]=\\\"user.UserAmount\\\" />\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"expenseDetails.SplitType === 'Exact'\\\">\\r\\n                    <h3>Exact Amount</h3>\\r\\n                    <table class=\\\"table table-striped table-bordered\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <td>User</td>\\r\\n                                <td>Amount</td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of expenseDetails.Payer; let i = index;\\\">\\r\\n                                <td>{{user.UserName}}</td>\\r\\n                                <td>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" #ExactAmount placeholder=\\\"Amount\\\"\\r\\n                                           name=\\\"UserAmount{{i}}\\\" [(ngModel)]=\\\"user.UserAmount\\\" />\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"expenseDetails.SplitType === 'Percentage'\\\">\\r\\n                    <h3>Percentage</h3>\\r\\n                    <table class=\\\"table table-striped table-bordered\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <td>User</td>\\r\\n                                <td>Percentage(%)</td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of expenseDetails.Payer; let i = index;\\\">\\r\\n                                <td>{{user.UserName}}</td>\\r\\n                                <td>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" #Percentage placeholder=\\\"Enter Percentage\\\"\\r\\n                                           name=\\\"Percentage{{i}}\\\" [(ngModel)]=\\\"user.Percentage\\\" />\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <textarea class=\\\"form-control rounded-0\\\" rows=\\\"3\\\" cols=\\\"15\\\" placeholder=\\\"Notes\\\"\\r\\n                          name=\\\"Note\\\" [(ngModel)]=\\\"expenseDetails.Note\\\">\\r\\n\\r\\n                </textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"onSubmit()\\\">Edit and Save</button>\\r\\n    </form>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ExpenseService } from '../shared/expenses.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GroupService } from '../../groups/shared/group.service';\r\nimport { IncludedUser, Expense } from '../shared/expense.model';\r\nimport { GroupDetails } from '../../groups/shared/group.model';\r\n\n@Component({\n    selector: 'app-expense-edit',\n    templateUrl: './expense-edit.component.html',\n    styleUrls: ['./expense-edit.component.css']\n})\nexport class ExpenseEditComponent implements OnInit {\n\n    groupId: number;\n    expenseId: number;\n    expenseDetails: Expense;\n    groupDetails: GroupDetails;\n    groupAvailable: boolean;\n    expenseAvailable: boolean;\n\n    constructor(private _expenseService: ExpenseService, private _groupService: GroupService, private _route: ActivatedRoute, private _router: Router) {\n        this.groupId = + this._route.snapshot.paramMap.get('groupId');\n        this.expenseId = + this._route.snapshot.paramMap.get('expenseId');\n        this.groupDetails = new GroupDetails();\n        this.groupAvailable = false;\n        this.expenseAvailable = false;\n    }\n\n    ngOnInit() {\n        this._expenseService.GetExpenseById(this.groupId, this.expenseId).subscribe(\n            res => {\n                this.expenseDetails = res as Expense;\n                this.expenseAvailable = true;\n            },\n            err => {\n                debugger\n            });\n\n        this._groupService.GetGroupById(this.groupId).subscribe(\n            res => {\n                this.groupDetails = res as GroupDetails;\n                this.groupAvailable = true;\n            },\n            err => {\n                debugger\n            });\n    }\n\n    IsChecked(id: string) {\r\n        if (this.expenseDetails.Payer.some(n => n.UserID === id)) {\r\n            return true;\r\n        }\r\n        else\r\n            return false;\r\n    }\n\n    UserHandle(userId: string, userName: string) {\n        let users = new IncludedUser(userId, userName, null, null);\n\n        if (this.expenseDetails.Payer.some(n => n.UserID === userId)) {\r\n            this.expenseDetails.Payer.splice(this.expenseDetails.Payer.findIndex(u => u.UserID === userId), 1);\r\n        }\r\n        else {\r\n            this.expenseDetails.Payer.push(users);\r\n        }\r\n        this.OnSplitChange();\r\n    }\n\n    OnSplitChange() {\n        if (this.expenseDetails.SplitType === 'Equal') {\n            for (let i = 0; i < this.expenseDetails.Payer.length; i++) {\r\n                this.expenseDetails.Payer[i].UserAmount = (this.expenseDetails.TotalAmount / this.expenseDetails.Payer.length);\r\n            }\r\n        }\n        else {\r\n            for (let i = 0; i < this.expenseDetails.Payer.length; i++) {\r\n                this.expenseDetails.Payer[i].UserAmount = null;\r\n                this.expenseDetails.Payer[i].Percentage = null;\r\n            }\r\n        }\r\n    }\n\n    onSubmit() {\n        this._expenseService.EditExpense(this.groupId, this.expenseDetails).subscribe(\r\n            res => {\r\n                this._router.navigate(['/groups/' + this.groupId]);\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2V4cGVuc2VzL2V4cGVuc2UtbGlzdC9leHBlbnNlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"width: 70%; text-align: center;\\\" *ngIf=\\\"isAvailable\\\">\\n    <div class=\\\"container\\\">\\r\\n        <h4>{{ groupDetails.GroupName }} ( {{ groupDetails.DateCreated | date: 'medium' }} )</h4>\\r\\n\\r\\n        <table class=\\\"table table-striped\\\" style=\\\"padding: 5px; margin-top: 5%;\\\">\\r\\n            <thead>\\r\\n                <tr style=\\\"font-weight: bold; text-transform: uppercase\\\">\\r\\n                    <td>Expense Name</td>\\r\\n                    <td>Paid By</td>\\r\\n                    <td>Payer</td>\\r\\n                    <td>Amount</td>\\r\\n                    <td></td>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let expense of expenseList\\\">\\r\\n                    <td style=\\\"font-weight: bold;\\\">{{expense.ExpenseName}}</td>\\r\\n                    <td>{{expense.Payee}}</td>\\r\\n                    <td>{{expense.Payer}}</td>\\r\\n                    <td>{{expense.Amount}}</td>\\r\\n                    <td><button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"DeleteExpense(groupId, expense.ID)\\\">Delete</button></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <a class=\\\"btn btn-primary\\\" style=\\\"margin-top: 5%;\\\" [routerLink]=\\\"['/groups',groupId]\\\">Back</a>\\r\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ExpenseService } from '../shared/expenses.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GroupService } from '../../groups/shared/group.service';\r\nimport { ExpenseDetails } from '../shared/expense.model';\r\nimport { GroupDetails } from '../../groups/shared/group.model';\r\n\n@Component({\n    selector: 'app-expense-list',\n    templateUrl: './expense-list.component.html',\n    styleUrls: ['./expense-list.component.css']\n})\nexport class ExpenseListComponent implements OnInit {\n\n    groupId: number;\n    groupDetails: GroupDetails;\n    expenseList: ExpenseDetails[];\n    isAvailable: boolean;\n\n    constructor(private _expenseService: ExpenseService, private _groupService: GroupService, private _route: ActivatedRoute, private _router: Router) {\n        this.groupId = + this._route.snapshot.paramMap.get('groupId');\n        this.groupDetails = new GroupDetails();\n        this.expenseList = [];\n        this.isAvailable = false;\n    }\n\n    ngOnInit() {\n        this._expenseService.GetAllExpenses(this.groupId).subscribe(\n            res => {\n                this.expenseList = res as ExpenseDetails[];\n            },\n            err => {\n                debugger\n            });\n\n        this._groupService.GetGroupById(this.groupId).subscribe(\n            res => {\n                this.groupDetails = res as GroupDetails;\n                this.isAvailable = true;\n            },\n            err => {\n                debugger\n            });\n    }\n\n    DeleteExpense(groupId: number, expenseId: number) {\n        this._expenseService.RemoveExpense(groupId, expenseId).subscribe(\r\n            res => {\r\n                this._router.navigate(['/groups/' + groupId]);\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExpenseListComponent } from './expense-list/expense-list.component';\nimport { ExpenseDetailsComponent } from './expense-details/expense-details.component';\nimport { ExpenseCreateComponent } from './expense-create/expense-create.component';\nimport { ExpenseEditComponent } from './expense-edit/expense-edit.component';\nimport { SettlementComponent } from './settlement/settlement.component';\nimport { ExpenseService } from './shared/expenses.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\nimport { NongroupExpenseComponent } from './nongroup-expense/nongroup-expense.component';\nimport { NongroupExpenseListComponent } from './nongroup-expense-list/nongroup-expense-list.component';\r\n\n@NgModule({\n  declarations: [ExpenseListComponent, ExpenseDetailsComponent, ExpenseCreateComponent, ExpenseEditComponent, SettlementComponent, NongroupExpenseComponent, NongroupExpenseListComponent],\n  imports: [\n      CommonModule,\n      FormsModule,\n      RouterModule\n    ],\n    providers: [ExpenseService]\n})\nexport class ExpensesModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2V4cGVuc2VzL25vbmdyb3VwLWV4cGVuc2UtbGlzdC9ub25ncm91cC1leHBlbnNlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"text-align: center;\\\">\\n    <h3>Non Group Expenses</h3>\\n\\n    <div class=\\\"container\\\">\\r\\n        <table class=\\\"table table-striped\\\" style=\\\"padding: 5px; margin-top: 5%;\\\">\\r\\n            <thead>\\r\\n                <tr style=\\\"font-weight: bold; text-transform: uppercase\\\">\\r\\n                    <td>Expense Name</td>\\r\\n                    <td>Paid By</td>\\r\\n                    <td>Payer</td>\\r\\n                    <td>Amount</td>\\r\\n                    <td></td>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let expense of expenseList\\\">\\r\\n                    <td style=\\\"font-weight: bold;\\\">{{expense.ExpenseName}}</td>\\r\\n                    <td>{{expense.Payee}}</td>\\r\\n                    <td>{{expense.Payer}}</td>\\r\\n                    <td>{{expense.Amount}}</td>\\r\\n                    <td><button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"DeleteExpense(expense.ID)\\\">Delete</button></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <div class=\\\"form-group\\\" style=\\\"margin-top: 3%;\\\">\\r\\n            <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/nongroup-expense/create']\\\">New Nongroup Expense</a>\\r\\n        </div>\\r\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/groups']\\\">Back</a>\\r\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ExpenseService } from '../shared/expenses.service';\r\nimport { ExpenseDetails } from '../shared/expense.model';\r\n\n@Component({\n    selector: 'app-nongroup-expense-list',\n    templateUrl: './nongroup-expense-list.component.html',\n    styleUrls: ['./nongroup-expense-list.component.css']\n})\nexport class NongroupExpenseListComponent implements OnInit {\n\n    expenseList: ExpenseDetails[];\n\n    constructor(private _expenseService: ExpenseService) {\n        this.expenseList = [];\n    }\n\n    ngOnInit() {\n        this._expenseService.GetNonGroupExpense().subscribe(\n            res => {\n                this.expenseList = res as ExpenseDetails[];\n                console.log(this.expenseList);\n            },\n            err => {\n                debugger;\n            });\n    }\n\n    DeleteExpense(expenseId: number) {\n        this._expenseService.RemoveExpense(0, expenseId).subscribe(\r\n            res => {\r\n                location.reload();\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2V4cGVuc2VzL25vbmdyb3VwLWV4cGVuc2Uvbm9uZ3JvdXAtZXhwZW5zZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"width: 60%; text-align: center;\\\">\\r\\n    <h3>Add Expense</h3>\\r\\n\\r\\n    <form autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"container\\\" style=\\\"margin: 5% 0px 5% 0px;\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label style=\\\"font-size: large;\\\">Expense On</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Expense name\\\"\\r\\n                       name=\\\"Name\\\" [(ngModel)]=\\\"expenseData.Name\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"container\\\" style=\\\"padding:25px; margin-top: 5%; border-radius: 5px; box-shadow: 5px 5px 8px #777\\\">\\r\\n                <div class=\\\"form-group col-xs-6\\\">\\r\\n                    <label>Amount</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter amount\\\"\\r\\n                           name=\\\"Amount\\\" [(ngModel)]=\\\"expenseData.Amount\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-6\\\" style=\\\"margin: 0px 0px 5% 0px;\\\">\\r\\n                    <label>Date</label>\\r\\n                    <input type=\\\"datetime-local\\\" class=\\\"form-control\\\"\\r\\n                           name=\\\"Date\\\" [(ngModel)]=\\\"expenseData.Date\\\" />\\r\\n                </div>\\r\\n\\r\\n                <!--<div class=\\\"form-group\\\">\\r\\n                    <label>Paid By</label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Email\\\"\\r\\n                               name=\\\"Payee\\\" [(ngModel)]=\\\"expenseData.Payee\\\" (change)=\\\"AddUser(expenseData.Payee)\\\" />\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <h4 style=\\\"margin-top: 5%;\\\">Include Users</h4>\\r\\n\\r\\n                <table class=\\\"table table-bordered table-striped\\\">\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let user of expenseData.IncludedUsers; let i = index;\\\">\\r\\n                            <td>{{i+1}}. {{user.UserName}}</td>\\r\\n                            <td><button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"RemoveUser(user.UserName)\\\">Remove</button></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n\\r\\n                <div class=\\\"form-group\\\" style=\\\"margin-top: 5%;\\\">\\r\\n                    <input #UserName class=\\\"form-control\\\" placeholder=\\\"Email Address\\\" />\\r\\n                </div>-->\\r\\n                <!--<a class=\\\"btn btn-primary\\\" (click)=\\\"AddUser(UserName.value)\\\">Add User</a>-->\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Paid By</label>\\r\\n                    <select class=\\\"form-control\\\"\\r\\n                            name=\\\"Payee\\\" [(ngModel)]=\\\"expenseData.Payee\\\" (change)=\\\"getAllFriends(expenseData.Payee)\\\" required>\\r\\n                        <option selected disabled value=\\\"\\\">--Select--</option>\\r\\n                        <option [value]=\\\"currentUserData.Id\\\" *ngIf=\\\"currentUser\\\">{{currentUserData.FullName}}</option>\\r\\n                        <option [value]=\\\"individualUserData.Id\\\" *ngIf=\\\"individualUser\\\">{{individualUserData.FullName}}</option>\\r\\n                        <option *ngFor=\\\"let user of friendList\\\" [value]=\\\"user.Id\\\">{{user.FullName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-xs-6\\\" *ngIf=\\\"friendsAvailable\\\">\\r\\n                    <label style=\\\"font-size: medium;\\\">Include</label>\\r\\n                    <div class=\\\"form-check\\\" style=\\\"margin-bottom: 3%;\\\" *ngFor=\\\"let users of friendList\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (click)=\\\"AddUser(users.Id, users.FullName)\\\">\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            &nbsp; {{ users.FullName }}\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" style=\\\"margin: 5% 0px 5% 0px\\\">\\r\\n                    <label style=\\\"font-size: medium;\\\">Split As</label><br />\\r\\n                    <input type=\\\"radio\\\" name=\\\"splittype\\\" [(ngModel)]=\\\"expenseData.SplitType\\\" (change)=\\\"SplitSelect()\\\" value=\\\"Equal\\\"> Equal<br />\\r\\n                    <input type=\\\"radio\\\" name=\\\"splittype\\\" [(ngModel)]=\\\"expenseData.SplitType\\\" (change)=\\\"SplitSelect()\\\" value=\\\"Exact\\\"> Exact Amount<br />\\r\\n                    <input type=\\\"radio\\\" name=\\\"splittype\\\" [(ngModel)]=\\\"expenseData.SplitType\\\" (change)=\\\"SplitSelect()\\\" value=\\\"Percentage\\\"> Percentage\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"container\\\" style=\\\"margin: 5% 0px 5% 0px;\\\">\\r\\n                <div *ngIf=\\\"expenseData.SplitType === 'Equal'\\\">\\r\\n                    <h3>Equally</h3>\\r\\n                    <table class=\\\"table table-striped table-bordered\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <td>User</td>\\r\\n                                <td>Amount</td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of expenseData.IncludedUsers\\\">\\r\\n                                <td>{{user.UserName}}</td>\\r\\n                                <td>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" #EqualAmount placeholder=\\\"Amount\\\" readonly\\r\\n                                           name=\\\"UserAmount\\\" [(ngModel)]=\\\"user.UserAmount\\\" />\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"expenseData.SplitType === 'Exact'\\\">\\r\\n                    <h3>Exact Amount</h3>\\r\\n                    <table class=\\\"table table-striped table-bordered\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <td>User</td>\\r\\n                                <td>Amount</td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of expenseData.IncludedUsers\\\">\\r\\n                                <td>{{user.UserName}}</td>\\r\\n                                <td>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" #ExactAmount placeholder=\\\"Enter amount\\\"\\r\\n                                           name=\\\"UserAmount\\\" [(ngModel)]=\\\"user.UserAmount\\\" />\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"expenseData.SplitType === 'Percentage'\\\">\\r\\n                    <h3>Percentage</h3>\\r\\n                    <table class=\\\"table table-striped table-bordered\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <td>User</td>\\r\\n                                <td>Percentage</td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let user of expenseData.IncludedUsers\\\">\\r\\n                                <td>{{user.UserName}}</td>\\r\\n                                <td>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" #Percentage placeholder=\\\"Enter percentage\\\"\\r\\n                                           name=\\\"Percentage\\\" [(ngModel)]=\\\"user.Percentage\\\" />\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <textarea class=\\\"form-control rounded-0\\\" rows=\\\"3\\\" cols=\\\"15\\\" name=\\\"Note\\\" [(ngModel)]=\\\"expenseData.Note\\\" placeholder=\\\"Notes\\\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"Submit()\\\">Save</button>\\r\\n    </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ExpenseModel, IncludedUser } from '../shared/expense.model';\r\nimport { ExpenseService } from '../shared/expenses.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserDetails } from '../../users/shared/user.model';\r\nimport { UserService } from '../../users/shared/user.service';\r\n\n@Component({\n    selector: 'app-nongroup-expense',\n    templateUrl: './nongroup-expense.component.html',\n    styleUrls: ['./nongroup-expense.component.css']\n})\nexport class NongroupExpenseComponent implements OnInit {\r\n    @ViewChild('UserName') UserName: ElementRef;\r\n\n\n    expenseData: ExpenseModel;\n    currentUserData: UserDetails;\n    friendList: UserDetails[];\n    individualUserData: UserDetails;\n    friendsAvailable: boolean;\n    currentUser: boolean;\n    individualUser: boolean;\n\n    constructor(private _userService: UserService, private _expenseService: ExpenseService, private _router: Router) {\n        this.expenseData = new ExpenseModel();\n        this.currentUserData = new UserDetails();\n        this.friendList = [];\n        this.individualUserData = new UserDetails();\n        this.friendsAvailable = false;\n        this.currentUser = false;\n        this.individualUser = false;\n    }\n\n    ngOnInit() {\n        this._userService.GetCurrentUser().subscribe(\n            res => {\n                this.currentUserData = res as UserDetails;\n                this.currentUser = true;\n            },\n            err => {\n                debugger\n            });\n    }\n\n    AddUser(userId: string, userName: string) {\r\n        let users = new IncludedUser(userId, userName, null, null);\r\n        if (this.expenseData.IncludedUsers.some(n => n.UserID === userId)) {\r\n            this.expenseData.IncludedUsers.splice(this.expenseData.IncludedUsers.findIndex(u => u.UserID === userId), 1);\r\n        }\r\n        else {\r\n            this.expenseData.IncludedUsers.push(users);\r\n        }\r\n        this.SplitSelect();\r\n        console.log(this.expenseData.IncludedUsers);\r\n    }\n\n    getAllFriends(userId: string) {\r\n        this.expenseData.IncludedUsers = [];\n        this.individualUserData = new UserDetails();\n\n        if (userId !== this.currentUserData.Id) {\n            this.currentUser = false;\n            this._userService.GetUserById(userId).subscribe(\r\n                res => {\r\n                    this.individualUserData = res as UserDetails;\r\n                    this.individualUser = true;\r\n\r\n                    let users = new IncludedUser(userId, this.individualUserData.FullName, null, null);\r\n                    this.expenseData.IncludedUsers.push(users);\r\n                },\r\n                err => {\r\n                    debugger\r\n                });\r\n        }\n        else {\n            this.currentUser = true;\r\n            this.individualUser = false;\r\n            let users = new IncludedUser(userId, this.currentUserData.FullName, null, null);\r\n            this.expenseData.IncludedUsers.push(users);\r\n        }\n\n        this._userService.GetAllFriends(userId).subscribe(\n            res => {\n                this.friendList = res as UserDetails[];\n                this.friendsAvailable = true;\n            },\n            err => {\n                debugger\n            });\r\n    }\n\n    SplitSelect() {\n        if (this.expenseData.SplitType === 'Equal') {\r\n            for (let i = 0; i < this.expenseData.IncludedUsers.length; i++) {\r\n                this.expenseData.IncludedUsers[i].UserAmount = (this.expenseData.Amount / this.expenseData.IncludedUsers.length);\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < this.expenseData.IncludedUsers.length; i++) {\r\n                this.expenseData.IncludedUsers[i].UserAmount = null;\r\n            }\r\n        }\r\n    }\n\n    Submit() {\n        this._expenseService.PostExpense(0, this.expenseData).subscribe(\r\n            res => {\r\n                this._router.navigate(['/nongroup-expense']);\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2V4cGVuc2VzL3NldHRsZW1lbnQvc2V0dGxlbWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" *ngIf=\\\"isAvailable\\\"\\r\\n     style=\\\"width: 60%; text-align: center; font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\\\">\\r\\n    <h3>Settle Up</h3>\\r\\n    <form #form=\\\"ngForm\\\">\\r\\n        <div class=\\\"container\\\" style=\\\"margin-top: 5%;\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Select your group</label>\\r\\n                <select class=\\\"form-control\\\"\\r\\n                        name=\\\"GroupID\\\" [(ngModel)]=\\\"settlementData.GroupID\\\" required>\\r\\n                    <option selected disabled value=\\\"null\\\">--Select--</option>\\r\\n                    <option [ngValue]=\\\"0\\\">Non Group</option>\\r\\n                    <option *ngFor=\\\"let group of groupList\\\" [ngValue]=\\\"group.GroupID\\\">{{group.GroupName}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"settlementData.GroupID === 0\\\">\\r\\n                <div class=\\\"form-group col-xs-4\\\">\\r\\n                    <label>Payer</label>\\r\\n                    <select class=\\\"form-control\\\"\\r\\n                            name=\\\"Payer\\\" [(ngModel)]=\\\"settlementData.Payer\\\" (change)=\\\"getAllFriends(settlementData.Payer)\\\" required>\\r\\n                        <option selected disabled value=\\\"\\\">--Select--</option>\\r\\n                        <option [value]=\\\"currentUserData.Id\\\" *ngIf=\\\"currentUser\\\">{{currentUserData.FullName}}</option>\\r\\n                        <option [value]=\\\"individualUserData.Id\\\" *ngIf=\\\"individualUser\\\">{{individualUserData.FullName}}</option>\\r\\n                        <option *ngFor=\\\"let user of friendList\\\" [value]=\\\"user.Id\\\">{{user.FullName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-4\\\">\\r\\n                    <h3 style=\\\"font-weight: bold;\\\">Paid</h3>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-4\\\">\\r\\n                    <label>Payee</label>\\r\\n                    <select class=\\\"form-control\\\"\\r\\n                            name=\\\"Payee\\\" (change)=\\\"FetchExpense(settlementData.GroupID, settlementData.Payer, settlementData.Payee)\\\" [(ngModel)]=\\\"settlementData.Payee\\\" required>\\r\\n                        <option selected disabled value=\\\"\\\">--Select--</option>\\r\\n                        <option *ngFor=\\\"let user of friendList\\\" [value]=\\\"user.Id\\\">{{user.FullName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <small class=\\\"text-muted text-danger\\\" *ngIf=\\\"!expenseIsAvailable\\\">The payer and payee should be selected correctly.</small>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"container\\\" *ngFor=\\\"let group of groupList\\\">\\r\\n                <div class=\\\"container\\\" style=\\\"margin: 5% 0px 5% 0px;\\\" *ngIf=\\\"group.GroupID === settlementData.GroupID\\\">\\r\\n                    <div class=\\\"form-group col-xs-4\\\">\\r\\n                        <label>Payer</label>\\r\\n                        <select class=\\\"form-control\\\"\\r\\n                                name=\\\"Payer\\\" (change)=\\\"FetchExpense(settlementData.GroupID, settlementData.Payer, settlementData.Payee)\\\" [(ngModel)]=\\\"settlementData.Payer\\\" required>\\r\\n                            <option selected disabled value=\\\"\\\">--Select--</option>\\r\\n                            <option *ngFor=\\\"let user of group.GroupUsers\\\" [value]=\\\"user.Id\\\">{{user.FullName}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-xs-4\\\">\\r\\n                        <h3 style=\\\"font-weight: bold;\\\">Paid</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-xs-4\\\">\\r\\n                        <label>Payee</label>\\r\\n                        <select class=\\\"form-control\\\"\\r\\n                                name=\\\"Payee\\\" (change)=\\\"FetchExpense(settlementData.GroupID, settlementData.Payer, settlementData.Payee)\\\" [(ngModel)]=\\\"settlementData.Payee\\\" required>\\r\\n                            <option selected disabled value=\\\"\\\">--Select--</option>\\r\\n                            <ng-container *ngFor=\\\"let user of group.GroupUsers\\\">\\r\\n                                <option *ngIf=\\\"user.Id !== settlementData.Payer\\\" [value]=\\\"user.Id\\\">{{user.FullName}}</option>\\r\\n                            </ng-container>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <small class=\\\"text-muted text-danger\\\" *ngIf=\\\"!expenseIsAvailable\\\">The payer and payee should be selected correctly.</small>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"expenseIsAvailable\\\">\\r\\n                <label>Amount</label>\\r\\n                <input type=\\\"number\\\" #Amount class=\\\"form-control\\\" name=\\\"Amount\\\" max=\\\"{{totalAmount}}\\\" required\\r\\n                       [(ngModel)]=\\\"settlementData.Amount\\\" />\\r\\n                <small class=\\\"text-muted text-danger\\\" *ngIf=\\\"(settlementData.Amount > totalAmount)\\\">The entered amount should be equal or less than debt.</small>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Date</label>\\r\\n                <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" name=\\\"SettlementDate\\\" required\\r\\n                       [(ngModel)]=\\\"settlementData.SettlementDate\\\" />\\r\\n            </div>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"Submit()\\\" [disabled]=\\\"form.invalid || (settlementData.Amount > totalAmount)\\\">Save</button>\\r\\n    </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GroupService } from '../../groups/shared/group.service';\r\nimport { GroupDetails } from '../../groups/shared/group.model';\r\nimport { SettlementData } from '../shared/expense.model';\r\nimport { ExpenseService } from '../shared/expenses.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserDetails } from '../../users/shared/user.model';\r\nimport { UserService } from '../../users/shared/user.service';\r\n\n@Component({\n    selector: 'app-settlement',\n    templateUrl: './settlement.component.html',\n    styleUrls: ['./settlement.component.css']\n})\nexport class SettlementComponent implements OnInit {\n\n    groupList: GroupDetails[];\n    settlementData: SettlementData;\n    isAvailable: boolean;\n    totalAmount: number;\n    expenseIsAvailable: boolean;\n\n    currentUserData: UserDetails;\r\n    friendList: UserDetails[];\r\n    individualUserData: UserDetails;\r\n    friendsAvailable: boolean;\r\n    currentUser: boolean;\r\n    individualUser: boolean;\n\n    constructor(private _userService: UserService, private _expenseService: ExpenseService, private _groupService: GroupService, private _router: Router) {\n        this.isAvailable = false;\n        this.groupList = [];\n        this.settlementData = new SettlementData();\n        this.expenseIsAvailable = false;\n\n        this.currentUserData = new UserDetails();\n        this.friendList = [];\n        this.individualUserData = new UserDetails();\n        this.friendsAvailable = false;\n        this.currentUser = false;\n        this.individualUser = false;\n    }\n\n    ngOnInit() {\n        this._userService.GetCurrentUser().subscribe(\r\n            res => {\r\n                this.currentUserData = res as UserDetails;\r\n                this.currentUser = true;\r\n            },\r\n            err => {\r\n                debugger\r\n            });\n\n        this._groupService.GetAllGroups().subscribe(\n            res => {\n                this.groupList = res as GroupDetails[];\n                this.isAvailable = true;\n            },\n            err => {\n                debugger\n            });\n    }\n\n    FetchExpense(groupId: number, payerId: string, payeeId: string) {\r\n        this._expenseService.GetExpenseByUser(groupId, payerId, payeeId).subscribe(\r\n            res => {\r\n                this.settlementData.Amount = res as number;\r\n                this.totalAmount = res as number;\r\n                if (res > 0)\r\n                    this.expenseIsAvailable = true;\r\n            },\r\n            err => {\r\n                console.log(err);\r\n            });\r\n    }\n\n    getAllFriends(userId: string) {\r\n        this.individualUserData = new UserDetails();\r\n\r\n        if (userId !== this.currentUserData.Id) {\r\n            this.currentUser = false;\r\n            this._userService.GetUserById(userId).subscribe(\r\n                res => {\r\n                    this.individualUserData = res as UserDetails;\r\n                    this.individualUser = true;\r\n                },\r\n                err => {\r\n                    debugger\r\n                });\r\n        }\r\n        else {\r\n            this.currentUser = true;\r\n            this.individualUser = false;\r\n        }\r\n\r\n        this._userService.GetAllFriends(userId).subscribe(\r\n            res => {\r\n                this.friendList = res as UserDetails[];\r\n                this.friendsAvailable = true;\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n\r\n        this.FetchExpense(this.settlementData.GroupID, this.settlementData.Payer, this.settlementData.Payee);\r\n    }\n\n\n    Submit() {\n        this._expenseService.Settlement(this.settlementData).subscribe(\r\n            res => {\r\n                this._router.navigate(['/dashboard']);\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n}\n","﻿export class ExpenseModel {\r\n    Name: string;\r\n    Date: Date;\r\n    Payee: string;\r\n    Amount: number;\r\n    IncludedUsers: IncludedUser[];\r\n    SplitType: string;\r\n    Note: string;\r\n\r\n    constructor() {\r\n        this.Name = '';\r\n        this.Date = null;\r\n        this.Payee = '';\r\n        this.Amount = 0;\r\n        this.SplitType = '';\r\n        this.Note = '';\r\n        this.IncludedUsers = [];\r\n    }\r\n}\r\n\r\nexport class IncludedUser {\r\n    UserID: string;\r\n    UserName: string;\r\n    UserAmount: number;\r\n    Percentage: number\r\n\r\n    constructor(UserID, UserName, UserAmount, Percentage) {\r\n        this.UserID = UserID;\r\n        this.UserName = UserName;\r\n        this.UserAmount = UserAmount;\r\n        this.Percentage = Percentage;\r\n    }\r\n}\r\n\r\nexport class Expense {\r\n    ExpenseID: number;\r\n    ExpenseName: string;\r\n    Date: Date;\r\n    PayeeID: string;\r\n    TotalAmount: number;\r\n    SplitType: string;\r\n    Note: string;\r\n    Payer: IncludedUser[];\r\n\r\n    constructor() {\r\n        this.ExpenseID = 0;\r\n        this.ExpenseName = '';\r\n        this.Date = null;\r\n        this.PayeeID = '';\r\n        this.TotalAmount = 0;\r\n        this.SplitType = '';\r\n        this.Note = '';\r\n        this.Payer = [];\r\n    }\r\n}\r\n\r\nexport class ExpenseDetails {\r\n    ID: string;\r\n    ExpenseName: string;\r\n    Date: Date;\r\n    Amount: number;\r\n    TotalAmount: number;\r\n    PayerID: string;\r\n    Payer: string;\r\n    PayeeID: string;\r\n    Payee: string;\r\n\r\n    constructor() {\r\n        this.ID = '';\r\n        this.ExpenseName = '';\r\n        this.Date = null;\r\n        this.Amount = 0;\r\n        this.TotalAmount = 0;\r\n        this.PayerID = '';\r\n        this.Payer = '';\r\n        this.PayeeID = '';\r\n        this.Payee = '';\r\n    }\r\n}\r\n\r\nexport class SettlementData {\r\n    GroupID: number;\r\n    Payee: string;\r\n    Payer: string;\r\n    Amount: number;\r\n    SettlementDate: Date;\r\n\r\n    constructor() {\r\n        this.GroupID = null;\r\n        this.Payee = '';\r\n        this.Payer = '';\r\n        this.Amount = 0;\r\n        this.SettlementDate = null;\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SettlementData, ExpenseModel, Expense } from './expense.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n    \r\nexport class ExpenseService {\r\n    URL = 'http://localhost:64169/api/Expense';\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    GetAllExpenses(groupId: number) {\r\n        return this._http.get(this.URL + \"/groups/\" + groupId + \"/expenses\");\r\n    }\r\n\r\n    GetExpenseById(groupId: number, expenseId: number) {\r\n        return this._http.get(this.URL + \"/groups/\" + groupId + \"/expenses/\" + expenseId);\r\n    }\r\n\r\n    GetExpenseByUser(groupId, payerId, payeeId) {\r\n        return this._http.get(this.URL + \"/groups/\" + groupId + \"/expenses/\" + payerId + \"/\" + payeeId);\r\n    }\r\n\r\n    EditExpense(groupId: number, expenseData: Expense) {\r\n        return this._http.put(this.URL + \"/groups/\" + groupId + '/expenses', expenseData);\r\n    }\r\n\r\n    PostExpense(groupId: number, expenseData: ExpenseModel) {\r\n        return this._http.post(this.URL + \"/groups/\" + groupId + \"/expenses\", expenseData);\r\n    }\r\n\r\n    RemoveExpense(groupId: number, expenseId: number) {\r\n        return this._http.delete(this.URL + \"/groups/\" + groupId + \"/expenses/\" + expenseId);\r\n    }\r\n\r\n    GetNonGroupExpense() {\r\n        return this._http.get(this.URL + \"/non-group-expenses\");\r\n    }\r\n\r\n    Settlement(settlementData: SettlementData) {\r\n        return this._http.post(this.URL + \"/settlement\", settlementData);\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2ZyaWVuZHMvZnJpZW5kLWNyZWF0ZS9mcmllbmQtY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"width: 60%; text-align: center; font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\\\">\\r\\n    <h3>Friends</h3>\\r\\n    \\r\\n    <div class=\\\"container\\\" style=\\\"margin: 5% 0px 10% 0px; padding: 20px; border-radius: 5px; box-shadow: 5px 5px 8px #777\\\">\\r\\n        <div *ngFor=\\\"let user of friendList\\\">\\r\\n            <div class=\\\"form-group col-xs-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"user.FullName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-xs-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"user.UserName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngFor=\\\"let user of addedFriends\\\">\\r\\n            <div class=\\\"form-group col-xs-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"user.FullName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-xs-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"user.UserName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-xs-6\\\" style=\\\"margin-top: 5%;\\\">\\r\\n            <input #FullName name=\\\"newlyAddedFulllName\\\" [(ngModel)]=\\\"newlyAddedFulllName\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-xs-6\\\" style=\\\"margin-top: 5%;\\\">\\r\\n            <input #UserName name=\\\"newlyAddedUserName\\\" [(ngModel)]=\\\"newlyAddedUserName\\\" class=\\\"form-control\\\" placeholder=\\\"Email Address\\\" />\\r\\n        </div>\\r\\n\\r\\n        <a class=\\\"btn btn-primary\\\" (click)=\\\"AddFriend(FullName.value,UserName.value)\\\" style=\\\"margin: 0px 0px 5% 0px;\\\">Add Friend</a>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"Submit()\\\">Save</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserDetails } from '../../users/shared/user.model';\r\nimport { UserService } from '../../users/shared/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\n@Component({\n    selector: 'app-friend-create',\n    templateUrl: './friend-create.component.html',\n    styleUrls: ['./friend-create.component.css']\n})\nexport class FriendCreateComponent implements OnInit {\n\n    friendList: UserDetails;\n    currentUserId: string;\n    addedFriends: UserDetails[];\n    newlyAddedFulllName: string;\n    newlyAddedUserName: string;\n\n    constructor(private _userService: UserService, private _route: ActivatedRoute) {\n        this.currentUserId = this._route.snapshot.paramMap.get('id');\n        this.addedFriends = [];\n        this.newlyAddedFulllName = '';\n        this.newlyAddedUserName = '';\n    }\n\n    ngOnInit() {\n        this._userService.GetAllFriends(this.currentUserId).subscribe(\n            res => {\n                this.friendList = res as UserDetails;\n            },\n            err => {\n                debugger\n            });\n    }\n\n    AddFriend(fullName: string, userName: string) {\r\n        let newlyAddedFriends = new UserDetails();\r\n\r\n        newlyAddedFriends.Id = null;\r\n        newlyAddedFriends.FullName = fullName;\r\n        newlyAddedFriends.UserName = userName;\r\n\r\n        this.addedFriends.push(newlyAddedFriends);\r\n\r\n        this.newlyAddedFulllName = '';\n        this.newlyAddedUserName = '';\r\n    }\n\n    Submit() {\n        this._userService.AddFriend(this.currentUserId, this.addedFriends).subscribe(\r\n            res => {\r\n                location.reload();\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2ZyaWVuZHMvZnJpZW5kLWVkaXQvZnJpZW5kLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  friend-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-friend-edit',\n  templateUrl: './friend-edit.component.html',\n  styleUrls: ['./friend-edit.component.css']\n})\nexport class FriendEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2ZyaWVuZHMvZnJpZW5kLWxpc3QvZnJpZW5kLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  friend-list works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-friend-list',\n  templateUrl: './friend-list.component.html',\n  styleUrls: ['./friend-list.component.css']\n})\nexport class FriendListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FriendListComponent } from './friend-list/friend-list.component';\nimport { FriendCreateComponent } from './friend-create/friend-create.component';\nimport { FriendEditComponent } from './friend-edit/friend-edit.component';\nimport { FormsModule } from '@angular/forms';\r\n\n@NgModule({\n  declarations: [FriendListComponent, FriendCreateComponent, FriendEditComponent],\n  imports: [\n      CommonModule,\n      FormsModule\n  ]\n})\nexport class FriendsModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2dyb3Vwcy9hZGQtbWVtYmVyL2FkZC1tZW1iZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<title>Add Member</title>\\n<div class=\\\"jumbotron center-block\\\" style=\\\"width: 50%; text-align: center\\\" *ngIf=\\\"isAvailable\\\">\\r\\n    <h4> Add Members </h4>\\r\\n    <h3> {{ currentGroup.GroupName }} </h3>\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n        <h3 style=\\\"font-weight: bold;\\\">Members</h3><br />\\r\\n\\r\\n        <div *ngFor=\\\"let user of currentGroup.GroupUsers\\\">\\r\\n            <div class=\\\"form-group col-xs-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"user.FullName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-xs-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"user.UserName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-xs-6\\\" style=\\\"margin-top: 5%;\\\">\\r\\n            <input #FullName name=\\\"newlyAddedFulllName\\\" [(ngModel)]=\\\"newlyAddedFulllName\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-xs-6\\\" style=\\\"margin-top: 5%;\\\">\\r\\n            <input #UserName name=\\\"newlyAddedUserName\\\" [(ngModel)]=\\\"newlyAddedUserName\\\" class=\\\"form-control\\\" placeholder=\\\"Email Address\\\" />\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"AddMember(FullName.value,UserName.value)\\\" style=\\\"margin: 5% 0px 5% 0px;\\\">Add Member</button>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"Save()\\\">Save</button>\\r\\n</div>\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GroupService } from '../shared/group.service';\r\nimport { CreateUserMapper, GroupDetails } from '../shared/group.model';\r\n\n@Component({\n    selector: 'app-add-member',\n    templateUrl: './add-member.component.html',\n    styleUrls: ['./add-member.component.css']\n})\nexport class AddMemberComponent implements OnInit {\n\n    groupID: number;\n    currentGroup: any;\n    newUsers: CreateUserMapper[];\n    isAvailable: boolean;\n    newlyAddedFulllName: string;\n    newlyAddedUserName: string;\n\n    constructor(private _route: ActivatedRoute, private _groupService: GroupService, private _router: Router) {\n        this.groupID = +this._route.snapshot.paramMap.get('id');\n        this.currentGroup = new GroupDetails();\n        this.newUsers = [];\n        this.isAvailable = false;\n        this.newlyAddedFulllName = '';\n        this.newlyAddedUserName = '';\n    }\n\n    ngOnInit() {\n        this._groupService.GetGroupById(this.groupID).subscribe(\n            res => {\n                this.currentGroup = res as any;\n                this.isAvailable = true;\n            },\n            err => {\n                debugger\n            });\n    }\n\n    AddMember(FullName, UserName) {\n        let user = new CreateUserMapper(FullName, UserName);\r\n        this.currentGroup.GroupUsers.push(user);\r\n        this.newUsers.push(user);\r\n\r\n        this.newlyAddedFulllName = '';\n        this.newlyAddedUserName = '';\r\n    }\n\n    Save() {\n        this._groupService.AddUserToGroup(this.newUsers, this.groupID).subscribe(\r\n            res => {\r\n                this._router.navigate(['/groups/', this.groupID]);\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n}\n","module.exports = \"label {\\r\\n    margin-bottom: 3%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC9hcHAvZ3JvdXBzL2dyb3VwLWNyZWF0ZS9ncm91cC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJBcHAvYXBwL2dyb3Vwcy9ncm91cC1jcmVhdGUvZ3JvdXAtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsYWJlbCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzJTtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"width: 60%; text-align: center;\\\">\\r\\n    <form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"container\\\" style=\\\"padding: 15px;\\\" *ngIf=\\\"isAvailable\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Your group name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Name\\\" [(ngModel)]=\\\"formData.Name\\\" placeholder=\\\"Enter group name\\\" required />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Category</label>\\r\\n                <select class=\\\"form-control\\\" name=\\\"Category\\\" [(ngModel)]=\\\"formData.Category\\\" required>\\r\\n                    <option value=\\\"0\\\" selected disabled>--Select--</option>\\r\\n                    <option *ngFor=\\\"let category of categoryList\\\" [value]=\\\"category.ID\\\"> {{ category.Name }} </option>\\r\\n                </select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"container\\\" style=\\\"margin: 10% 0px 10% 0px; border-radius: 5px; box-shadow: 5px 5px 8px #777\\\">\\r\\n                <h4 style=\\\"font-weight: bold; margin-bottom: 5%;\\\">Members</h4>\\r\\n                <input type=\\\"text\\\" name=\\\"Id\\\" [(ngModel)]=\\\"currentUser.Id\\\" hidden />\\r\\n                <div class=\\\"form-group col-xs-6\\\">\\r\\n                    <label>Name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"currentUser.FullName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-6\\\">\\r\\n                    <label>Email</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"currentUser.UserName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n                </div>\\r\\n\\r\\n                <div *ngFor=\\\"let user of formData.UserGroupMapper\\\">\\r\\n                    <div class=\\\"form-group col-xs-6\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"user.FullName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-xs-6\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"user.UserName\\\" style=\\\"background-color: white\\\" readonly />\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-xs-6\\\" style=\\\"margin-top: 5%;\\\">\\r\\n                    <input #FullName name=\\\"newlyAddedFulllName\\\" [(ngModel)]=\\\"newlyAddedFulllName\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-xs-6\\\" style=\\\"margin-top: 5%;\\\">\\r\\n                    <input #UserName name=\\\"newlyAddedUserName\\\" [(ngModel)]=\\\"newlyAddedUserName\\\" class=\\\"form-control\\\" placeholder=\\\"Email Address\\\" />\\r\\n                </div>\\r\\n\\r\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"AddUser(FullName.value,UserName.value)\\\" style=\\\"margin: 0px 0px 5% 0px;\\\">Add User</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <label>Simplify Debts</label>\\r\\n        <div class=\\\"form-check\\\" style=\\\"margin-bottom: 3%;\\\">\\r\\n            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"simplifydebt\\\" name=\\\"SimplifyDebts\\\" [(ngModel)]=\\\"formData.SimplifyDebts\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"simplifydebt\\\">\\r\\n                &nbsp; True\\r\\n            </label>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <textarea class=\\\"form-control rounded-0\\\" name=\\\"Note\\\" [(ngModel)]=\\\"formData.Note\\\" rows=\\\"3\\\" cols=\\\"15\\\" placeholder=\\\"Notes\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"OnSubmit()\\\" [disabled]=\\\"form.invalid\\\">Save</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { GroupService } from '../shared/group.service';\r\nimport { UserService } from '../../users/shared/user.service';\r\nimport { CreateGroupModel, CreateUserMapper, Category } from '../shared/group.model';\r\nimport {  Router } from '@angular/router';\r\nimport { UserDetails } from '../../users/shared/user.model';\r\n\n@Component({\n    selector: 'app-group-create',\n    templateUrl: './group-create.component.html',\n    styleUrls: ['./group-create.component.css']\n})\nexport class GroupCreateComponent implements OnInit {\n\n    currentUser: UserDetails;\n    formData: CreateGroupModel;\n    categoryList: Category[];\n    isAvailable: boolean;\n    newlyAddedFulllName: string;\n    newlyAddedUserName: string;\n\n    constructor(private _userService: UserService, private _groupService: GroupService, private _router: Router) {\n        this.currentUser = new UserDetails();\n        this.formData = new CreateGroupModel();\n        this.categoryList = [];\n        this.isAvailable = false;\n        this.newlyAddedFulllName = '';\n        this.newlyAddedUserName = '';\n    }\n\n    ngOnInit() {\n        this._userService.GetCurrentUser().subscribe(\n            res => {\n                this.currentUser = res as UserDetails;\n                this.isAvailable = true;\n            },\n            err => {\n                debugger\n            });\n\n        this._groupService.GetCategories().subscribe(\n            res => {\n                this.categoryList = res as Category[];\n            },\n            err => {\n                debugger\n            });\n    }\n\n    AddUser(FullName, UserName) {\n        let user = new CreateUserMapper(FullName, UserName);\r\n        this.formData.UserGroupMapper.push(user);\r\n\r\n        this.newlyAddedFulllName = '';\r\n        this.newlyAddedUserName = '';\r\n    }\n\n    OnSubmit() {\n        this._groupService.CreateGroup(this.formData).subscribe(\r\n            res => {\r\n                this._router.navigate(['/groups']);\r\n        },\r\n        err => {\r\n            console.log(err);\r\n        })\r\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2dyb3Vwcy9ncm91cC1kZXRhaWxzL2dyb3VwLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"text-align: center; font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\\\" *ngIf=\\\"isAvailable\\\">\\r\\n    <h2> {{ groupDetails.GroupName }} </h2>\\r\\n    <h4> Created on : {{ groupDetails.DateCreated | date: 'medium' }} </h4>\\r\\n    <h4> Created by : {{ groupDetails.CreatedBy }} </h4>\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-5\\\" style=\\\"box-shadow: 10px 10px 20px #777; border-radius: 5px; margin: 5% 2% 0px 2%\\\">\\r\\n                <div id=\\\"leftcontainer\\\">\\r\\n                    <div class=\\\"container\\\" style=\\\"margin-top: 5%; font-family: 'Times New Roman', Times, serif\\\">\\r\\n                        <h3 style=\\\"font-weight: bold; margin-bottom: 2%;\\\">Users</h3>\\r\\n                        <table class=\\\"table table-striped table-bordered\\\" style=\\\"margin-top: 5%;\\\">\\r\\n                            <thead>\\r\\n                                <tr style=\\\"font-weight: bold;\\\">\\r\\n                                    <td>Name</td>\\r\\n                                    <td>Email Address</td>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let group of groupDetails.GroupUsers\\\" style=\\\"word-break: break-all\\\">\\r\\n                                    <td> {{ group.FullName }} </td>\\r\\n                                    <td> {{ group.UserName }} </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/groups',groupID,'add-member']\\\" style=\\\"margin-bottom: 10%;\\\">Add Member</a>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\" style=\\\"box-shadow: 10px 10px 20px #777; border-radius: 5px; margin: 5% 2% 0px 2%\\\">\\r\\n                <div id=\\\"middlecontainer\\\">\\r\\n                    <div class=\\\"container\\\" style=\\\"margin-top: 5%; font-family: 'Times New Roman', Times, serif\\\">\\r\\n                        <h3 style=\\\"font-weight: bold; margin-bottom: 2%;\\\">Expenses</h3>\\r\\n                        <table class=\\\"table table-bordered table-striped\\\" style=\\\"margin-top: 5%;\\\">\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let expense of expenses; let i = index\\\">\\r\\n                                    <td [routerLink]=\\\"['/groups/', groupID, 'expenses', expense.ID, 'edit-expense']\\\" style=\\\"cursor: pointer;\\\">{{i+1}}.  {{expense.Payer}} owes {{expense.Amount}} to {{expense.Payee}} for <b>{{expense.ExpenseName}}</b></td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/groups/',groupID,'expenses']\\\" style=\\\"margin-bottom: 10%;\\\">All expenses</a><br />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <a class=\\\"btn btn-success btn-lg\\\" [routerLink]=\\\"['/groups/',groupID,'create-expense']\\\" style=\\\"margin-top: 5%;\\\">Create new expense</a><br />\\r\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/groups']\\\" style=\\\"margin-top: 1%;\\\">Back</a>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GroupService } from '../shared/group.service';\r\nimport { ExpenseService } from '../../expenses/shared/expenses.service';\r\nimport { GroupDetails } from '../shared/group.model';\r\nimport { ExpenseDetails } from '../../expenses/shared/expense.model';\r\n\n@Component({\n    selector: 'app-group-details',\n    templateUrl: './group-details.component.html',\n    styleUrls: ['./group-details.component.css']\n})\nexport class GroupDetailsComponent implements OnInit {\n\n    groupID: number;\n    groupDetails: GroupDetails;\n    expenses: ExpenseDetails[];\n    isAvailable: boolean;\n\n    constructor(private _route: ActivatedRoute, private _groupService: GroupService, private _expenseService: ExpenseService) {\n        this.groupID = +this._route.snapshot.paramMap.get('id');\n        this.groupDetails = new GroupDetails();\n        this.expenses = [];\n        this.isAvailable = false;\n    }\n\n    ngOnInit() {\n        this._groupService.GetGroupById(this.groupID).subscribe(\n            res => {\n                this.groupDetails = res as GroupDetails;\n                this.isAvailable = true;\n            },\n            err => {\n                debugger\n            });\n\n        this._expenseService.GetAllExpenses(this.groupID).subscribe(\n            res => {\n                this.expenses = res as ExpenseDetails[];\n            },\n            err => {\n                debugger\n            });\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2dyb3Vwcy9ncm91cC1lZGl0L2dyb3VwLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"width: 60%; text-align: center; font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\\\" *ngIf=\\\"isAvailable\\\">\\n    <h3> {{ groupDetails.GroupName }} ( {{ groupDetails.DateCreated | date: 'medium' }} ) </h3>\\n\\n    <form autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"container\\\" style=\\\"padding: 15px;\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Your group name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"GroupName\\\" [(ngModel)]=\\\"groupDetails.GroupName\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Category</label>\\r\\n                <select class=\\\"form-control\\\" name=\\\"Category\\\" [(ngModel)]=\\\"groupDetails.Category\\\">\\r\\n                    <option *ngFor=\\\"let category of categoryList; let i = index\\\" [value]=\\\"category.ID\\\" [selected]=\\\"i == 'groupDetails.Category'\\\"> {{ category.Name }} </option>\\r\\n                </select>\\r\\n            </div>\\r\\n            <div class=\\\"container\\\" style=\\\"margin: 10% 0px 10% 0px; border-radius: 5px; box-shadow: 5px 5px 8px #777; word-break: break-all;\\\">\\r\\n                <h4 style=\\\"font-weight: bold; margin-bottom: 5%;\\\">Members</h4>\\r\\n                <div class=\\\"container\\\" *ngFor=\\\"let user of groupDetails.GroupUsers; let i = index\\\">\\r\\n                    <div class=\\\"form-group col-xs-5\\\">\\r\\n                        {{ i+1 }}.{{ user.FullName }}\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-xs-4\\\">\\r\\n                        {{ user.UserName }}\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-xs-3\\\">\\r\\n                        <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"RemoveUserFromGroup(user.Id)\\\">Remove</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/groups',groupID,'add-member']\\\" style=\\\"margin-bottom: 10%;\\\">Add Member</a>\\r\\n            </div>\\r\\n        </div>\\r\\n        <label>Simplify Debts</label>\\r\\n        <div class=\\\"form-check\\\" style=\\\"margin-bottom: 3%;\\\">\\r\\n            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"simplifydebt\\\" name=\\\"SimplifyDebts\\\" [(ngModel)]=\\\"groupDetails.SimplifyDebts\\\" >\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"simplifydebt\\\">\\r\\n                &nbsp; True\\r\\n            </label>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <textarea class=\\\"form-control rounded-0\\\" name=\\\"Note\\\" [(ngModel)]=\\\"groupDetails.Note\\\" rows=\\\"3\\\" cols=\\\"15\\\" placeholder=\\\"Notes\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"OnSubmit(groupDetails)\\\">Save</button>\\r\\n        </div>\\r\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GroupService } from '../shared/group.service';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport { Category, GroupDetails } from '../shared/group.model';\r\n\n@Component({\n    selector: 'app-group-edit',\n    templateUrl: './group-edit.component.html',\n    styleUrls: ['./group-edit.component.css']\n})\nexport class GroupEditComponent implements OnInit {\n\n    groupID: number;\n    groupDetails: GroupDetails;\n    categoryList: Category[];\n    isAvailable: boolean;\n\n    constructor(private _groupService: GroupService, private _route: ActivatedRoute, private _router: Router) {\n        this.groupID = +this._route.snapshot.paramMap.get('id');\n        this.groupDetails = new GroupDetails();\n        this.categoryList = [];\n        this.isAvailable = false;\n    }\n\n    ngOnInit() {\n        this._groupService.GetGroupById(this.groupID).subscribe(\n            (res) => {\n                this.groupDetails = res as GroupDetails;\n                this.isAvailable = true;\n            },\n            err => {\n                debugger\n            });\n\n        this._groupService.GetCategories().subscribe(\n            res => {\n                this.categoryList = res as Category[];\n            },\n            err => {\n                debugger\n            });\n    }\n\n    RemoveUserFromGroup(userID: string) {\r\n        var index = this.groupDetails.GroupUsers.findIndex(x => x.Id == userID);\r\n        this.groupDetails.GroupUsers.splice(index, 1);\r\n    }\n\n    OnSubmit(groupDetails: GroupDetails) {\n        this._groupService.EditGroup(groupDetails).subscribe(\r\n            res => {\r\n                this._router.navigate(['/groups']);\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL2dyb3Vwcy9ncm91cC1saXN0L2dyb3VwLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron\\\" style=\\\"text-align: center; background-color: whitesmoke\\\">\\n    <a class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/create-group']\\\">Create New Group</a>\\n\\n    <div class=\\\"container\\\" style=\\\"margin-top: 3%; padding: 15px; box-shadow: 10px 10px 20px #777; border-radius: 10px; background-color: ghostwhite\\\">\\r\\n        <table class=\\\"table table-hover\\\" style=\\\"font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\\\">\\r\\n            <thead style=\\\"font-weight: bold\\\">\\r\\n                <tr>\\r\\n                    <td>Group</td>\\r\\n                    <td>Created By</td>\\r\\n                    <td>Date Created</td>\\r\\n                    <td></td>\\r\\n                    <td></td>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let group of groupList\\\">\\r\\n                <tr>\\r\\n                    <td><a [routerLink]=\\\"['/groups',group.GroupID]\\\" style=\\\"text-decoration: none; display: block; color: black; cursor: pointer\\\">{{ group.GroupName }}</a></td>\\r\\n                    <td><a [routerLink]=\\\"['/groups',group.GroupID]\\\" style=\\\"text-decoration: none; display: block; color: black; cursor: pointer\\\">{{ group.CreatedBy }}</a></td>\\r\\n                    <td><a [routerLink]=\\\"['/groups',group.GroupID]\\\" style=\\\"text-decoration: none; display: block; color: black; cursor: pointer\\\">{{ group.DateCreated | date: 'dd/MM/yyyy' }}</a></td>\\r\\n                    <td *ngIf=\\\"currentUser.FullName === group.CreatedBy\\\"><a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/groups/',group.GroupID,'edit-group']\\\">Edit</a></td>\\r\\n                    <td *ngIf=\\\"currentUser.FullName === group.CreatedBy\\\"><button class=\\\"btn btn-danger\\\" (click)=\\\"DeleteGroup(group.GroupID)\\\">Delete</button></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GroupService } from '../shared/group.service';\nimport { UserService } from '../../users/shared/user.service';\r\nimport { GroupDetails } from '../shared/group.model';\r\nimport { UserDetails } from '../../users/shared/user.model';\r\n@Component({\n    selector: 'app-group-list',\n    templateUrl: './group-list.component.html',\n    styleUrls: ['./group-list.component.css']\n})\nexport class GroupListComponent implements OnInit {\n\n    groupList: GroupDetails[];\n    currentUser: UserDetails;\n\n    constructor(private _groupService: GroupService, private _userService: UserService) {\n        this.groupList = [];\n        this.currentUser = new UserDetails();\n    }\n\n    ngOnInit() {\n        this._groupService.GetAllGroups().subscribe(\n            res => {\n                this.groupList = res as GroupDetails[];\n            },\n            err => {\n                debugger\n            });\n\n        this._userService.GetCurrentUser().subscribe(\n            res => {\n                this.currentUser = res as UserDetails;\n            },\n            err => {\n                debugger\n            });\n    }\n\n    DeleteGroup(groupID: number) {\n        this._groupService.DeleteGroup(groupID).subscribe(\r\n            res => {\r\n                window.location.reload();\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GroupListComponent } from './group-list/group-list.component';\nimport { GroupDetailsComponent } from './group-details/group-details.component';\nimport { GroupCreateComponent } from './group-create/group-create.component';\nimport { GroupEditComponent } from './group-edit/group-edit.component';\nimport { RouterModule } from '@angular/router';\r\nimport { GroupService } from './shared/group.service';\r\nimport { FormsModule } from '@angular/forms';\nimport { AddMemberComponent } from './add-member/add-member.component';\r\n\n@NgModule({\n    declarations: [\n        GroupListComponent,\n        GroupDetailsComponent,\n        GroupCreateComponent,\n        GroupEditComponent,\n        AddMemberComponent\n    ],\n\n    imports: [\n        CommonModule,\n        RouterModule,\n        FormsModule\n    ],\n    providers: [GroupService]\n})\nexport class GroupsModule { }\n","﻿export class CreateGroupModel {\r\n    ID: number;\r\n    Name: string;\r\n    Category: number;\r\n    Note: string;\r\n    SimplifyDebts: boolean;\r\n    UserGroupMapper: CreateUserMapper[];\r\n\r\n    constructor() {\r\n        this.ID = 0;\r\n        this.Name = '';\r\n        this.Category = 0;\r\n        this.Note = '';\r\n        this.SimplifyDebts = false;\r\n        this.UserGroupMapper = [];\r\n    }\r\n}\r\n\r\nexport class CreateUserMapper {\r\n    FullName: string;\r\n    UserName: string;\r\n\r\n    constructor(FullName, UserName) {\r\n        this.FullName = FullName;\r\n        this.UserName = UserName;\r\n    }\r\n}\r\n\r\nexport class GroupDetails {\r\n    GroupID: number;\r\n    GroupName: string;\r\n    CreatedBy: string;\r\n    DateCreated: Date;\r\n    Category: number;\r\n    Note: string;\r\n    SimplifyDebts: boolean;\r\n    GroupUsers: GroupUser[];\r\n\r\n    constructor() {\r\n        this.GroupID = 0;\r\n        this.GroupName = '';\r\n        this.CreatedBy = '';\r\n        this.DateCreated = null;\r\n        this.Category = 0;\r\n        this.Note = '';\r\n        this.SimplifyDebts = null;\r\n        this.GroupUsers = [];\r\n    }\r\n}\r\n\r\nexport class GroupUser {\r\n    Id: string;\r\n    FullName: string;\r\n    UserName: string;\r\n    DefaultCurrency: number;\r\n    DefaultLanguage: number;\r\n}\r\n\r\nexport class Category {\r\n    ID: number;\r\n    Name: string;\r\n\r\n    constructor() {\r\n        this.ID = 0;\r\n        this.Name = '';\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GroupDetails, CreateUserMapper, CreateGroupModel } from './group.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class GroupService {\r\n\r\n    URL = 'http://localhost:64169/api/Group';\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    GetCategories() {\r\n        return this._http.get(this.URL + \"/category\");\r\n    }\r\n\r\n    GetAllGroups() {\r\n        return this._http.get(this.URL + \"/groups\");\r\n    }\r\n\r\n    GetGroupById(groupId: number) {\r\n        return this._http.get(this.URL + \"/groups/\" + groupId);\r\n    }\r\n\r\n    CreateGroup(groupData: CreateGroupModel) {\r\n        return this._http.post(this.URL + \"/groups\", groupData);\r\n    }\r\n\r\n    EditGroup(groupData: GroupDetails) {\r\n        return this._http.put(this.URL + \"/groups\", groupData);\r\n    }\r\n\r\n    AddUserToGroup(userData: CreateUserMapper[], groupId: number) {\r\n        return this._http.post(this.URL + \"/groups/\" + groupId, userData);\r\n    }\r\n\r\n    DeleteGroup(groupID: number) {\r\n        return this._http.delete(this.URL + \"/groups/\" + groupID);\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\nimport { environment } from '../environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL3VzZXJzL2FjdGl2aXR5LWxpc3QvYWN0aXZpdHktbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"text-align: center;\\\">\\n    <div class=\\\"container\\\">\\n        <h3>Activities</h3>\\n        <table class=\\\"table-striped\\\" style=\\\"width: 100%; margin: 5% 0px 3% 0px;\\\">\\r\\n            <thead>\\r\\n                <tr style=\\\"font-weight: bold; font-size: larger\\\">\\r\\n                    <td>Activity</td>\\r\\n                    <td>Date</td>\\r\\n                    <td></td>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let activity of activityList; let i = index\\\">\\r\\n                    <td>{{i+1}}. {{activity.Description}}</td>\\r\\n                    <td>{{activity.Date | date:'medium'}}</td>\\r\\n                    <td><a class=\\\"alert-danger\\\" style=\\\"cursor: pointer\\\" (click)=\\\"RemoveActivity(activity.ID)\\\">Remove</a></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/dashboard']\\\">Back</a>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Activity } from '../shared/user.model';\r\nimport { UserService } from '../shared/user.service';\r\nimport { Router } from '@angular/router';\r\n\n@Component({\n    selector: 'app-activity-list',\n    templateUrl: './activity-list.component.html',\n    styleUrls: ['./activity-list.component.css']\n})\nexport class ActivityListComponent implements OnInit {\n\n    activityList: Activity[];\n\n    constructor(private _userService: UserService, private _router: Router) {\n        this.activityList = [];\n    }\n\n    ngOnInit() {\n        this._userService.GetAllActivities().subscribe(\n            res => {\n                this.activityList = res as Activity[];\n            },\n            err => {\n                debugger\n            });\n    }\n\n    RemoveActivity(activityId: number) {\n        this._userService.RemoveActivity(activityId).subscribe(\r\n            res => {\r\n                location.reload();\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL3VzZXJzL2N1cnJlbnQtdXNlci1lZGl0L2N1cnJlbnQtdXNlci1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  current-user-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-current-user-edit',\n  templateUrl: './current-user-edit.component.html',\n  styleUrls: ['./current-user-edit.component.css']\n})\nexport class CurrentUserEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJBcHAvYXBwL3VzZXJzL2N1cnJlbnQtdXNlci9jdXJyZW50LXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"width: 50%; text-align: center; font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\\\">\\r\\n    <h3>Your Account</h3>\\r\\n\\r\\n    <div class=\\\"container\\\" style=\\\"margin-top: 7%;\\\" *ngIf=\\\"isAvailable\\\">\\r\\n        <input name=\\\"Id\\\" [(ngModel)]=\\\"currentUserDetails.Id\\\" hidden />\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Your Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"FullName\\\" [(ngModel)]=\\\"currentUserDetails.FullName\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Email Address</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"FullName\\\" [(ngModel)]=\\\"currentUserDetails.UserName\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"container\\\">\\r\\n            <h4>Groups</h4>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\" style=\\\"padding: 15px;\\\">\\r\\n                    <h5>Created Groups</h5>\\r\\n\\r\\n                    <table class=\\\"table table-striped table-responsive\\\">\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let groups of groupDetails; let i = index;\\\">\\r\\n                                <td *ngIf=\\\"groups.CreatedBy === currentUserDetails.FullName\\\">\\r\\n                                    <a [routerLink]=\\\"['/groups', groups.GroupID]\\\" style=\\\"text-decoration: none; cursor: pointer;\\\">{{i+1}}. {{groups.GroupName}}</a>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\" style=\\\"padding: 15px;\\\">\\r\\n                    <h5>Member</h5>\\r\\n                    <table class=\\\"table table-striped\\\">\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let groups of groupDetails; let i = index;\\\">\\r\\n                                <td>\\r\\n                                    <a [routerLink]=\\\"['/groups', groups.GroupID]\\\" style=\\\"text-decoration: none; cursor: pointer;\\\">{{i+1}}. {{groups.GroupName}}</a>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../shared/user.service';\r\nimport { GroupService } from '../../groups/shared/group.service';\r\nimport { UserDetails, UserGroup } from '../shared/user.model';\r\n\n@Component({\n    selector: 'app-current-user',\n    templateUrl: './current-user.component.html',\n    styleUrls: ['./current-user.component.css']\n})\nexport class CurrentUserComponent implements OnInit {\n\n    currentUserDetails: UserDetails;\n    groupDetails: UserGroup;\n    isAvailable: boolean;\n\n    constructor(private _userService: UserService, private _groupService: GroupService) {\n        this.isAvailable = false;\n    }\n\n    ngOnInit() {\n        this._userService.GetCurrentUser().subscribe(\n            res => {\n                this.currentUserDetails = res as UserDetails;\n                this.isAvailable = true;\n            },\n            err => {\n                debugger\n            });\n\n        this._groupService.GetAllGroups().subscribe(\n            res => {\n                this.groupDetails = res as UserGroup;\n            },\n            err => {\n                debugger\n            });\n    }\n\n}\n","module.exports = \"body {\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC9hcHAvdXNlcnMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJmaWxlIjoiQXBwL2FwcC91c2Vycy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"jumbotron center-block\\\" style=\\\"text-align: center; font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\\\">\\n    <div class=\\\"container\\\" *ngIf=\\\"currentUserDataAvailable\\\">\\r\\n        <h3>Welcome {{ currentUserData.FullName }} </h3>\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 5%;\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-3 col-lg-3\\\" style=\\\"box-shadow: 10px 10px 20px #777; border-radius: 15px; padding: 15px;\\\">\\r\\n                <h3>Friends</h3>\\r\\n                <table class=\\\"table-striped\\\" style=\\\"width: 100%; margin: 10% 0px 10% 0px;\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <td></td>\\r\\n                            <td></td>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let friend of friendList\\\" style=\\\"font-size: larger\\\">\\r\\n                            <td>{{friend.FullName}}</td>\\r\\n                            <td><i class=\\\"fa fa-times alert-danger\\\" aria-hidden=\\\"true\\\" style=\\\"cursor: pointer;\\\"\\r\\n                                   (click)=\\\"removeFriend(friend.Id)\\\" ></i></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/user/', currentUserData.Id, 'add-friend']\\\">Add Friend</a>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-6 col-lg-6\\\" style=\\\"box-shadow: 10px 10px 20px #777; border-radius: 20px;\\\">\\r\\n                <h3>Activities</h3>\\r\\n\\r\\n                <table class=\\\"table-striped\\\" style=\\\"width: 100%; margin: 8% 0px 3% 0px;\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <td></td>\\r\\n                            <td></td>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let activity of activityList | slice:0:4; let i = index\\\" style=\\\"font-size: larger\\\">\\r\\n                            <td>{{i+1}}. {{activity.Description}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/current-user/activities']\\\" style=\\\"margin-bottom: 3%;\\\">All activities</a>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 col-md-3 col-lg-3\\\" style=\\\"box-shadow: 10px 10px 20px #777; border-radius: 15px; padding: 15px;\\\">\\r\\n                <h3>Balance</h3>\\r\\n                <table class=\\\"table-striped\\\" style=\\\"width: 100%; margin: 10% 0px 10% 0px;\\\">\\r\\n                    <tbody style=\\\"font-size: large\\\">\\r\\n                        <tr>\\r\\n                            <td>1. You are owed total <b>{{totalAmountLent}}</b> Rs.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>2. You owe total <b>{{totalAmountBorrowed}}</b> Rs.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../shared/user.service';\r\nimport { UserDetails, Activity } from '../shared/user.model';\r\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n    currentUserData: UserDetails;\n    currentUserDataAvailable: boolean;\n    friendList: UserDetails[];\n    totalAmountBorrowed: number;\n    totalAmountLent: number;\n    activityList: Activity[];\n\n    constructor(private _userService: UserService) {\n        this.currentUserData = new UserDetails();\n        this.currentUserDataAvailable = false;\n        this.friendList = [];\n        this.activityList = [];\n    }\n\n    ngOnInit() {\n        this._userService.GetCurrentUser().subscribe(\n            res => {\n                this.currentUserData = res as UserDetails;\r\n                this.currentUserDataAvailable = true;\r\n\r\n                this._userService.GetAllFriends(this.currentUserData.Id).subscribe(\n                    res => {\n                        this.friendList = res as UserDetails[];\n                    },\n                    err => {\n                        debugger\n                    });\r\n\r\n                this._userService.GetTotalBorrowed(this.currentUserData.Id).subscribe(\r\n                    res => {\r\n                        this.totalAmountBorrowed = res as number;\r\n                    },\r\n                    err => {\r\n                        debugger\r\n                    });\r\n\r\n                this._userService.GetTotalLent(this.currentUserData.Id).subscribe(\r\n                    res => {\r\n                        this.totalAmountLent = res as number;\r\n                    },\r\n                    err => {\r\n                        debugger\r\n                    });\r\n            },\n            err => {\n                debugger\n            });\n\n        this._userService.GetAllActivities().subscribe(\r\n            res => {\r\n                this.activityList = res as Activity[];\r\n            },\r\n            err => {\r\n                debugger\r\n            });\n    }\n\n    removeFriend(friendId: string) {\n        this._userService.DeleteFriend(this.currentUserData.Id, friendId).subscribe(\r\n            res => {\r\n                location.reload();\r\n            },\r\n            err => {\r\n                debugger\r\n            });\r\n    }\n}\n","﻿export class UserDetails {\r\n    Id: string;\r\n    FullName: string;\r\n    UserName: string;\r\n\r\n    constructor() {\r\n        this.Id = '';\r\n        this.FullName = '';\r\n        this.UserName = '';\r\n    }\r\n}\r\n\r\nexport class UserGroup {\r\n    GroupID: number;\r\n    GroupName: string;\r\n    Category: number;\r\n    CreatedBy: string;\r\n    DateCreated: Date;\r\n    Note: string;\r\n    SimplifyDebts: boolean;\r\n    GroupUsers: [];\r\n}\r\n\r\nexport class Activity {\r\n    ID: number;\r\n    Date: Date;\r\n    Description: string;\r\n\r\n    constructor() {\r\n        this.ID = 0;\r\n        this.Date = null;\r\n        this.Description = '';\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserDetails } from './user.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n\r\n    URL = 'http://localhost:64169/api/User';\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    GetCurrentUser() {\r\n        return this._http.get(this.URL + \"/current-user\");\r\n    }\r\n\r\n    GetUserById(userId: string) {\r\n        return this._http.get(this.URL + \"/users/\" + userId);\r\n    }\r\n\r\n    GetAllFriends(userId: string) {\r\n        return this._http.get(this.URL + \"/users/\" + userId + \"/friends\");\r\n    }\r\n\r\n    AddFriend(userId: string, userData: UserDetails[]) {\r\n        return this._http.post(this.URL + \"/users/\" + userId + \"/friends\", userData);\r\n    }\r\n\r\n    GetTotalLent(userId: string) {\r\n        return this._http.get(this.URL + \"/users/\" + userId + \"/total-lent\");\r\n    }\r\n\r\n    GetTotalBorrowed(userId: string) {\r\n        return this._http.get(this.URL + \"/users/\" + userId + \"/total-borrowed\");\r\n    }\r\n\r\n    DeleteFriend(userId: string, friendId: string) {\r\n        return this._http.delete(this.URL + \"/users/\" + userId + \"/friends/\" + friendId);\r\n    }\r\n\r\n    GetAllActivities() {\r\n        return this._http.get(this.URL + \"/current-user/activities\");\r\n    }\r\n\r\n    RemoveActivity(activityId: number) {\r\n        return this._http.delete(this.URL + \"/current-user/activities/\" + activityId);\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CurrentUserComponent } from './current-user/current-user.component';\nimport { CurrentUserEditComponent } from './current-user-edit/current-user-edit.component';\nimport { UserService } from './shared/user.service';\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\nimport { ActivityListComponent } from './activity-list/activity-list.component';\r\n\n@NgModule({\n  declarations: [CurrentUserComponent, CurrentUserEditComponent, DashboardComponent, ActivityListComponent],\n  imports: [\n      CommonModule,\n      FormsModule,\n      HttpClientModule,\n      RouterModule\n    ],\n    providers: [UserService]\n})\nexport class UsersModule { }\n","﻿// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n"],"sourceRoot":""}